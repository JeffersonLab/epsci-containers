#--------------------------------------------------------------------------
# almalinux build environment
#
# 
# This Dockerfile will produce an image suitable for compiling software.
# The image will gave a C/C++ and Fortran compiler as well as python,
# It will also contain version control software (e.g. git and svn).
#
# The commands below are simplified by setting this environment variable:
#
#   export MYOS=almalinux:9.2-20230718
#   export MYOS_=almalinux-9.2-20230718
#
#
# To use this most effectively:
#
#      docker run -it --rm jeffersonlab/epsci-almalinux:9.2-20230718 cat /container/dsh | tr -d "\r" > dsh
#      chmod +x ./dsh
#      ./dsh jeffersonlab/epsci-almalinux:9.2-20230718
#
#--------------------------------------------------------------------------
#
#  These instructions are for a multi-architecture build (see below for single):
#
#   docker buildx create --name mybuilder
#   docker buildx use mybuilder
#   docker buildx inspect --bootstrap
#   docker buildx build --platform linux/arm64,linux/amd64 -t jeffersonlab/epsci-${MYOS} --push -f Dockerfile.${MYOS_} .
#
#  To get this locally for the local architecture, pull it from dockerhub:
#
#  docker pull jeffersonlab/epsci-${MYOS}
#
#--------------------------------------------------------------------------
#  These instructions are for the classic single architecture build:
#
#   docker build -t epsci-${MYOS} -t jeffersonlab/epsci-${MYOS} -f Dockerfile.${MYOS} .
#   docker push jeffersonlab/epsci-${MYOS}
#
#--------------------------------------------------------------------------
# On ifarm:
#   cd /scigroup/spack/mirror/singularity/images
#   apptainer build epsci-${MYOS_}.img docker://jeffersonlab/epsci-${MYOS}
#   cp -rp epsci-${MYOS_}.img /scigroup/cvmfs/epsci/singularity/images
#
#--------------------------------------------------------------------------

FROM almalinux:9.2-20230718

# Python3 requires the timezone be set and will try and prompt
# for it.
ENV TZ=US/Eastern
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Install compiler and code management tools
RUN dnf -y groupinstall 'Development Tools' \
	&& dnf -y install --allowerasing gcc-gfortran python3 git subversion curl which procps-ng \
	&& dnf clean all

COPY dsh /container/dsh
COPY Dockerfile.almalinux.9.2-20230718 /container/Dockerfile.almalinux.9.2-20230718
RUN ln -s /root /home/root
RUN ln -s /root /home/0

CMD ["/bin/bash"]
